name: Node.js CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
      id: nvmrc
    - uses: actions/setup-node@v3
      with:
        cache: 'npm'
        node-version-file: '.nvmrc'
    - run: ./bin/check-node.sh
    - run: npm ci
      env:
        CYPRESS_INSTALL_BINARY: 0
    - run: npm run lint
    - run: npm run test
    - uses: docker/build-push-action@v2
      with:
        build-args: |
          NODE_RELEASE=${{ steps.nvmrc.outputs.NODE_VERSION }}
        context: ./
        file: ./Dockerfile
        push: false
        tags: textbook/starter-kit
  e2e:
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        node: [ '14', '16' ]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        cache: 'npm'
        node-version: ${{ matrix.node }}
    - run: npm ci
    - run: npm run e2e
    - run: npm run e2e:dev
  deploy:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: e2e
    steps:
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: starter-kit-ci
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
